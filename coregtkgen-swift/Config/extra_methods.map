{

"GtkContainer" : {

"-(void)addWidget:(CGTKWidget *)widget withProperties:(OFDictionary *)properties" :
"{\n\tCGTKTypeWrapper *wrapper;\n\tfor(OFString *propName in properties)\n\t{\n\t\twrapper = [properties objectForKey:propName];\n\n\t\tgtk_container_child_set_property([self CONTAINER], [widget WIDGET], [propName UTF8String], [wrapper asGValuePtr]);\n\t}\n}"

},

"GtkDialog" : {

"-(instancetype)initWithTitle:(OFString *)title andParent:(CGTKWindow *)parent andFlags:(GtkDialogFlags)flags andButtonTextResponseDictionary:(OFDictionary *)buttonTextDict" :
"{\n\tself = [super initWithGObject:(GObject *)gtk_dialog_new_with_buttons([title UTF8String], [parent WINDOW], flags, NULL, NULL)];\n\n\tif(self)\n\t{\n\t\tCGTKTypeWrapper *wrapper;\n\t\tfor(OFString *text in buttonTextDict)\n\t\t{\n\t\t\twrapper = [buttonTextDict objectForKey:text];\n\n\t\t\t[self addButtonWithButtonText:text andResponseId:wrapper.gintValue];\n\t\t}\n\t}\n\n\treturn self;\n}",

"-(void)addButtons:(OFDictionary *)buttonTextDict" : 
"{\n\tCGTKTypeWrapper *wrapper;\n\tfor(OFString *text in buttonTextDict)\n\t{\n\t\twrapper = [buttonTextDict objectForKey:text];\n\n\t\t[self addButtonWithButtonText:text andResponseId:wrapper.gintValue];\n\t}\n}"

},

"GtkFileChooserDialog" : {

"-(instancetype)initWithTitle:(OFString *)title andParent:(CGTKWindow *)parent andAction:(GtkFileChooserAction)action andButtonTextResponseDictionary:(OFDictionary *)buttonTextDict" :
"{\n\tself = [super initWithGObject:(GObject *)gtk_file_chooser_dialog_new([title UTF8String], [parent WINDOW], action, NULL, NULL)];\n\n\tif(self)\n\t{\n\t\tCGTKTypeWrapper *wrapper;\n\n\t\tfor(OFString *text in buttonTextDict)\n\t\t{\n\t\t\twrapper = [buttonTextDict objectForKey:text];\n\n\t\t\t[self addButtonWithButtonText:text andResponseId:wrapper.gintValue];\n\t\t}\n\t}\n\n\treturn self;\n}"

},

"GtkMessageDialog" : {

"-(instancetype)initWithParent:(CGTKWindow *)parent andFlags:(GtkDialogFlags)flags andType:(GtkMessageType)type andButtons:(GtkButtonsType)buttons andMessage:(OFString *)message" :
"{\n\tself = [super initWithGObject:(GObject *)gtk_message_dialog_new([parent WINDOW], flags, type, buttons, [message UTF8String], NULL)];\n\n\tif(self)\n\t{\n\t\t// Do nothing\n\t}\n\n\treturn self;\n}",

"-(instancetype)initWithParent:(CGTKWindow *)parent andFlags:(GtkDialogFlags)flags andType:(GtkMessageType)type andButtons:(GtkButtonsType)buttons andMarkup:(OFString *)markup" :
"{\n\tself = [super initWithGObject:(GObject *)gtk_message_dialog_new_with_markup([parent WINDOW], flags, type, buttons, [markup UTF8String], NULL)];\n\n\tif(self)\n\t{\n\t\t// Do nothing\n\t}\n\n\treturn self;\n}",

"-(void)formatSecondaryText:(OFString *)message" : 
"{\n\tgtk_message_dialog_format_secondary_text([self MESSAGEDIALOG], [message UTF8String], NULL);\n}",

"-(void)formatSecondaryMarkup:(OFString *)markup" : 
"{\n\tgtk_message_dialog_format_secondary_markup([self MESSAGEDIALOG], [markup UTF8String], NULL);\n}"

},

"GtkRecentChooserDialog" : {

"-(instancetype)initWithTitle:(OFString *)title andParent:(CGTKWindow *)parent andButtonTextResponseDictionary:(OFDictionary *)buttonTextDict" :
"{\n\tself = [super initWithGObject:(GObject *)gtk_recent_chooser_dialog_new([title UTF8String], [parent WINDOW], NULL, NULL)];\n\n\tif(self)\n\t{\n\t\tCGTKTypeWrapper *wrapper;\n\n\t\tfor(OFString *text in buttonTextDict)\n\t\t{\n\t\t\twrapper = [buttonTextDict objectForKey:text];\n\n\t\t\t[self addButtonWithButtonText:text andResponseId:wrapper.gintValue];\n\t\t}\n\t}\n\n\treturn self;\n}",

"-(instancetype)initForManagerWithTitle:(OFString *)title andParent:(CGTKWindow *)parent andManager:(GtkRecentManager*)manager andButtonTextResponseDictionary:(OFDictionary *)buttonTextDict" :
"{\n\tself = [super initWithGObject:(GObject *)gtk_recent_chooser_dialog_new_for_manager([title UTF8String], [parent WINDOW], manager, NULL, NULL)];\n\n\tif(self)\n\t{\n\t\tCGTKTypeWrapper *wrapper;\n\n\t\tfor(OFString *text in buttonTextDict)\n\t\t{\n\t\t\twrapper = [buttonTextDict objectForKey:text];\n\n\t\t\t[self addButtonWithButtonText:text andResponseId:wrapper.gintValue];\n\t\t}\n\t}\n\n\treturn self;\n}"

},

"GtkInfoBar" : {

"-(instancetype)initWithButtonTextResponseDictionary:(OFDictionary *)buttonTextDict" :
"{\n\tself = [super initWithGObject:(GObject *)gtk_info_bar_new()];\n\n\tif(self)\n\t{\n\t\tCGTKTypeWrapper *wrapper;\n\n\t\tfor(OFString *text in buttonTextDict)\n\t\t{\n\t\t\twrapper = [buttonTextDict objectForKey:text];\n\n\t\t\t[self addButtonWithButtonText:text andResponseId:wrapper.gintValue];\n\t\t}\n\t}\n\n\treturn self;\n}",

"-(void)addButtonTextResponseDictionary:(OFDictionary *)buttonTextDict" : 
"{\n\tCGTKTypeWrapper *wrapper;\n\n\tfor(OFString *text in buttonTextDict)\n\t{\n\t\twrapper = [buttonTextDict objectForKey:text];\n\n\t\t[self addButtonWithButtonText:text andResponseId:wrapper.gintValue];\n\t}\n}"

}

}
